{"version":3,"sources":["views/pages/InventoryAll.jsx"],"names":["Inventory","match","React","useState","posts","setPosts","useSelector","state","auth","userId","account","setAccount","dispatch","useDispatch","history","useHistory","usePagination","location","pathname","pageData","currentPage","previousPage","nextPage","totalPages","doPagination","useEffect","getConnection","window","web3","a","ethereum","Web3","enable","currentProvider","loaded_web3","alert","eth","getAccounts","accounts","getCave","getData","owner","_posts","axios","get","then","res","data","mintedMonster","length","forEach","item","post","_id","monster","tokenId","title","img","rating","totalRating","values","Level","EXP","Element","Energy","substring","slice","push","catch","e","console","log","className","onClick","connectUserAction","map","stepImg","src"],"mappings":"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","file":"static/js/11.d9a6dded.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport CurrenPageTitle from '../../components/common/CurrenPageTitle';\nimport NavLinks from '../../components/Inventory/NavLinks';\nimport PostCard from '../../components/Inventory/PostCard';\nimport { usePagination } from '../../hooks/usePagination';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { connectUserAction, connectUserSuccess } from './../../store/actions/auth/login';\nimport Web3 from 'web3';\nimport DearMonster from '../../contracts/DearMonster.json';\nimport data from \"../../data/Post.json\";\nimport axios from 'axios'\n\nconst Inventory = ({ match }) => {\n\tconst [posts, setPosts] = React.useState([]);\n\tconst { userId } = useSelector((state) => state.auth);\n\tconst [account, setAccount] = useState();\n\tconst [paths, setPaths] = useState([]);\n\tconst [attributes, setAttributes] = useState([]);\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst { pageData, currentPage, previousPage, nextPage, totalPages, doPagination } =\n\t\tusePagination(posts, 6, history.location.pathname);\n\n\tconst handleConnect = () => {\n\t\tdispatch(connectUserAction());\n\t};\n\n\tuseEffect(() => {\n\t\tgetConnection();\n\t}, [window.web3])\n\n\tconst getConnection = async () => {\n\t\tif (window.ethereum) {\n\t\t\twindow.web3 = new Web3(window.ethereum)\n\t\t\tawait window.ethereum.enable();\n\t\t} else if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\n\t\t\twindow.loaded_web3 = true\n\t\t} else {\n\t\t\twindow.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n\t\t}\n\n\t\tlet web3 = window.web3\n\t\t// Load account\n\t\tlet accounts = await web3.eth.getAccounts()\n\t\tsetAccount(accounts[0]);\n\t};\n\n\tuseEffect(() => {\n\t\tgetCave();\n\t}, [])\n\n\tconst getCave = async () => {\n\t\tif (window.ethereum) {\n\t\t\twindow.web3 = new Web3(window.ethereum)\n\t\t\tawait window.ethereum.enable();\n\t\t} else if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\n\t\t\twindow.loaded_web3 = true\n\t\t} else {\n\t\t\twindow.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n\t\t}\n\n\t\tlet web3 = window.web3\n\t\t// Load account\n\t\tlet accounts = await web3.eth.getAccounts()\n\t\tsetAccount(accounts[0]);\n\t\tgetData(accounts[0]);\n\t};\n\n\tfunction getData(owner) {\n\t\tlet _posts = []\n\t\taxios.get('http://1a2f-119-155-21-243.ngrok.io/api/mintedMonster/ownerItems/' + owner)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.mintedMonster && res.data.mintedMonster.length > 0) {\n\t\t\t\t\tres.data.mintedMonster.forEach(item => {\n\t\t\t\t\t\tlet post = {}\n\t\t\t\t\t\tpost['mintedId'] = item._id\n\t\t\t\t\t\tpost['monsterId'] = item.monster._id\n\t\t\t\t\t\tpost['id'] = item.tokenId\n\t\t\t\t\t\tpost['title'] = item.monster.title\n\t\t\t\t\t\tpost['img'] = item.monster.img\n\t\t\t\t\t\tpost['rating'] = item.rating\n\t\t\t\t\t\tpost['totalRating'] = item.monster.totalRating\n\t\t\t\t\t\tpost['values'] = {}\n\t\t\t\t\t\tpost.values['Level'] = item.values.Level\n\t\t\t\t\t\tpost.values['EXP'] = item.values.EXP\n\t\t\t\t\t\tpost.values['Element'] = item.values.Element\n\t\t\t\t\t\tpost.values['Energy'] = item.values.Energy\n\t\t\t\t\t\t// post.values['Price'] = \"48000\"\n\t\t\t\t\t\tpost.values['OwnerID'] = `${owner.substring(0, 4)}...${owner.slice(-4)}`\n\t\t\t\t\t\t_posts.push(post);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tsetPosts(_posts)\n\t\t\t\tdoPagination(_posts);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(\"Error ----------------\")\n\t\t\t\tconsole.log(e)\n\t\t\t})\n\t}\n\n\t// useEffect(() => {\n\t// \tif (posts.length > 0)\n\t// \t  return\n\t// \tgetData();\n\t// }, [attributes])\n\n\n\t// useEffect(() => {\n\t// \tgetData();\n\t// }, [])\n\n\treturn (\n\t\t<div>\n\t\t\t<CurrenPageTitle title='Inventory'></CurrenPageTitle>\n\t\t\t<NavLinks match={match} />\n\t\t\t{posts.length > 0 ? '' :\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<div className='center'>\n\t\t\t\t\t\t{account ? (\n\t\t\t\t\t\t\t<p className='text-white  mt-9 fs-23 bg-dark bg-opacity-50 p-3 rounded-3 w-auto'>\n\t\t\t\t\t\t\t\tYou Don't have any inventory\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p className='text-white  mt-9 fs-23 bg-dark bg-opacity-50 p-3 rounded-3 w-auto'>\n\t\t\t\t\t\t\t\t\tPlease connect to see Inventory\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tonClick={handleConnect}\n\t\t\t\t\t\t\t\t\tclassName={` header-Connect-btn h-40px w-sm mx-auto  mt-5 center bold cursor`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tConnect\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<div className='container mt-10 px-md-auto px-8'>\n\t\t\t\t<div className='row row-cols-lg-3 row-cols-md-2 gx-10'>\n\t\t\t\t\t{pageData.map((post) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PostCard account={account} post={post} stepImg='/assets/imgs/droganBord.png' className='mb-9' />\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t{pageData.length == 0 ? (\n\t\t\t\t\t''\n\t\t\t\t) : (\n\t\t\t\t\t<footer className='center pb-8 pt-4'>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc='/assets/imgs/ArrowLeft.png '\n\t\t\t\t\t\t\tclassName='cursor'\n\t\t\t\t\t\t\tonClick={previousPage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p className='text-white fs-22 mx-5'>\n\t\t\t\t\t\t\t{currentPage}/{totalPages}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img src='/assets/imgs/ArrowRight.png' className='cursor' onClick={nextPage} />\n\t\t\t\t\t</footer>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Inventory;\n"],"sourceRoot":""}