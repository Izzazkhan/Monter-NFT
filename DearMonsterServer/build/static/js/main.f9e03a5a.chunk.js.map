{"version":3,"sources":["store/actions/auth/login.js","utils/notification.js","store/types.js","routes/routesPath.js","routes/index.js","components/common/Header.jsx","views/App.jsx","store/reducers/authReducer.js","store/store.js","components/common/PageLoading.jsx","index.js"],"names":["connectUserSuccess","user","type","CONNECT_USER_SUCCESS","payload","updateUserBalance","bal","UPDATE_USER_BALANCE","balance","connectUserAction","dispatch","CONNECT_USER_START","window","ethereum","enable","then","autoRefreshOnNetworkChange","request","method","res","error","notification","message","notify","setTimeout","CONNECT_USER_ERROR","console","log","obj","icon","position","ob","toast","POSITION","BOTTOM_RIGHT","BOTTOM_LEFT","info","success","warn","configure","TRADE_ITEMS","TRADING_POST","INSTRUCTIONS","TRAINING_GROUND","NavbarRoutes","path","pathForNavabr","title","exact","component","lazy","hidden","Routes","Header","useState","active","setActive","blance","setBlance","useDispatch","userId","useSelector","state","auth","setAccount","provider","setProvider","setWeb3","web3Modal","setWeb3Modal","setWalletConnected","init","WalletConnectProvider","Fortmatic","web3","providerOptions","walletconnect","package","options","web3_Modal","Web3Modal","cacheProvider","disableInjectedProvider","fetchAccountData","a","Web3","eth","getAccounts","accounts_temp","refreshAccountData","connect","on","accounts","chainId","networkId","params","eth_accounts","useEffect","currentProvider","loaded_web3","alert","Contract","DMSToken","abi","methods","balanceOf","call","Math","floor","className","to","src","alt","onClick","style","zIndex","map","route","id","substring","slice","href","target","App","idx","initialState","isAuthenticated","loading","rootReducer","combineReducers","action","store","createStore","PageLoading","role","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.f9e03a5a.chunk.js","sourcesContent":["import { CONNECT_USER_START, CONNECT_USER_SUCCESS, CONNECT_USER_ERROR, UPDATE_USER_BALANCE } from '../../types';\nimport {notification} from \"../../../utils/notification\";\n\nexport const connectUserStart = () => ({\n\ttype: CONNECT_USER_START,\n});\n\nexport const connectUserSuccess = (user) => ({\n\ttype: CONNECT_USER_SUCCESS,\n\tpayload: user,\n});\n\nexport const connectUserError = (error) => ({\n\ttype: CONNECT_USER_ERROR,\n\tpayload: error,\n});\n\nexport const updateUserBalance = (bal) => ({\n\ttype: UPDATE_USER_BALANCE,\n\tbalance: bal,\n});\n\nexport const connectUserAction = () => {\n\treturn (dispatch) => {\n\t\tdispatch(connectUserStart());\n\t\tif (window.ethereum) {\n\t\t\twindow.ethereum.enable().then(() => {\n\t\t\t\twindow.ethereum.autoRefreshOnNetworkChange = false;\n\t\t\t\twindow.ethereum.request({ method: 'eth_accounts' }).then((res) => {\n                    if(res[0]){\n\t\t\t\t\t\tlet notify = notification({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tmessage: 'MetaMask connected successfully',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tnotify();\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t// window.location.reload();\n\t\t\t\t\t\t}, 500);\n                    }else{\n                        dispatch(connectUserError('connection not successful'));\n                    }\n                });\n\t\t\t});\n\t\t} else {\n\t\t\tlet notify = notification({\n\t\t\t\ttype: 'error',\n\t\t\t\tmessage: 'Please install MetaMask to continue',\n\t\t\t});\n\t\t\tnotify();\n\t\t\tconsole.log('');\n\t\t}\n\t};\n};\n","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\n//html parser\nexport function notification(\n\tobj = { type: 'info', message: 'Message', icon: '', position: 'right' },\n) {\n\tconst notify = () => {\n\t\tlet ob = { icon: obj.icon, position: toast.POSITION.BOTTOM_RIGHT };\n\n\t\tif (obj.position == 'left') {\n\t\t\tob['position'] = toast.POSITION.BOTTOM_LEFT;\n\t\t}\n\n\t\tif (obj.type == 'info') {\n\t\t\treturn toast.info(obj.message, ob);\n\t\t}\n\n\t\tif (obj.type == 'error') {\n\t\t\treturn toast.error(obj.message, ob);\n\t\t}\n\n\t\tif (obj.type == 'success') {\n\t\t\treturn toast.success(obj.message, ob);\n\t\t}\n\n\t\tif (obj.type == 'warn') {\n\t\t\treturn toast.warn(obj.message, ob);\n\t\t}\n\t};\n\treturn notify;\n}\n","export const CONNECT_USER_START = 'CONNECT_USER_START';\nexport const CONNECT_USER_SUCCESS = 'CONNECT_USER_SUCCESS';\nexport const CONNECT_USER_ERROR = 'CONNECT_USER_ERROR';\nexport const UPDATE_USER_BALANCE = 'UPDATE_USER_BALANCE';\nexport const TRADE_ITEMS = 'TRADE_ITEMS'","export const HUNTERS_VALLEY = '/';\nexport const TRADING_POST = '/trading-post';\nexport const INSTRUCTIONS = '/instructions';\n// export const INVENTORY = '/inventory/:slug?';\nexport const INVENTORY_ALL = '/inventory/all';\nexport const INVENTORY_TRADING = '/inventory/trading';\nexport const TRAINING_GROUND = '/training-ground';\n","import { lazy } from 'react';\nimport {\n\tHUNTERS_VALLEY,\n\tTRADING_POST,\n\tINSTRUCTIONS,\n\tINVENTORY_ALL,\n\tINVENTORY_TRADING,\n\tTRAINING_GROUND,\n} from './routesPath';\n\nexport const NavbarRoutes = [\n\t{\n\t\tpath: HUNTERS_VALLEY,\n\t\tpathForNavabr: HUNTERS_VALLEY,\n\t\ttitle: \"Hunter's Valley\",\n\t\texact: true,\n\t\tcomponent: lazy(() => import('../views/pages/HuntersValley')),\n\t},\n\t{\n\t\tpath: TRADING_POST,\n\t\tpathForNavabr: TRADING_POST,\n\t\ttitle: 'Trading post',\n\t\texact: true,\n\t\tcomponent: lazy(() => import('../views/pages/TradingPost')),\n\t},\n\t{\n\t\tpath: INVENTORY_ALL,\n\t\ttitle: 'Inventory',\n\t\tpathForNavabr: '/inventory/all',\n\t\texact: true,\n\t\tcomponent: lazy(() => import('../views/pages/InventoryAll')),\n\t},\n\t{\n\t\tpath: INVENTORY_TRADING,\n\t\ttitle: 'Inventory Trading',\n\t\tpathForNavabr: '/inventory/trading',\n\t\texact: true,\n\t\thidden: true,\n\t\tcomponent: lazy(() => import('../views/pages/InventoryTrading')),\n\t},\n\t{\n\t\tpath: TRAINING_GROUND,\n\t\tpathForNavabr: TRAINING_GROUND,\n\t\ttitle: 'Training Ground',\n\t\texact: true,\n\t\tcomponent: lazy(() => import('../views/pages/TrainingGround')),\n\t},\n\t{\n\t\tpath: INSTRUCTIONS,\n\t\tpathForNavabr: INSTRUCTIONS,\n\t\ttitle: 'More',\n\t\texact: true,\n\t\tcomponent: lazy(() => import('../views/pages/HowToPlay')),\n\t},\n];\n\nexport const Routes = [\n\t...NavbarRoutes,\n];\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { NavbarRoutes } from '../../routes/';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { connectUserAction, connectUserSuccess } from '../../store/actions/auth/login';\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport evmChains from 'evm-chains';\nimport Fortmatic from 'fortmatic';\nimport DMSToken from \"../../contracts/DMSToken.json\";\n\nconst Header = () => {\n\tconst [active, setActive] = useState(false);\n\tconst [blance, setBlance] = useState(0);\n\n\tconst dispatch = useDispatch();\n\tconst { userId } = useSelector((state) => state.auth);\n\tconst { balance } = useSelector((state) => state.auth);\n\tconst [account, setAccount] = useState([]);\n\tlet [provider, setProvider] = useState(null);\n\tconst [web3, setWeb3] = useState(0);\n\tconst [web3Modal, setWeb3Modal] = useState(null);\n\tconst [walletConnected, setWalletConnected] = useState(false);\n\n\tuseEffect(async () => {\n\t\tinit();\n\t}, []);\n\n\tuseEffect(async () => {\n\t\tif (window.ethereum) {\n\t\t\twindow.web3 = new Web3(window.ethereum)\n\t\t\tawait window.ethereum.enable();\n\t\t}\n\t\telse if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\n\t\t\twindow.loaded_web3 = true\n\t\t}\n\t\telse {\n\t\t\twindow.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n\t\t}\n\n\t\tlet web3 = window.web3\n\t\tlet accounts = await web3.eth.getAccounts()\n\t\t// let networkId = await web3.eth.net.getId()\n\t\t// let DMSTokenNetwork = DMSToken.networks[networkId]\n\t\t// let DMSTokenContract = new web3.eth.Contract(DMSToken.abi, DMSTokenNetwork.address)\t\n\t\tlet DMSTokenContract = new web3.eth.Contract(DMSToken.abi, \"0x4a709e2e07edffc8770f268c373fb9f17e316b9f\")\n\t\tDMSTokenContract.methods.balanceOf(accounts[0]).call().then(async function (bal) {\n\t\t\tsetBlance(Math.floor(bal / (10 ** 18)));\n\t\t})\n\t}, [userId, balance]);\n\n\tfunction init() {\n\t\tconsole.log(\"Initializing example\");\n\t\tconsole.log(\"WalletConnectProvider is\", WalletConnectProvider);\n\t\tconsole.log(\"Fortmatic is\", Fortmatic);\n\t\tconsole.log(\"window.web3 is\", window.web3, \"window.ethereum is\", window.ethereum);\n\n\t\t// Tell Web3modal what providers we have available.\n\t\t// Built-in web browser provider (only one can exist as a time)\n\t\t// like MetaMask, Brave or Opera is added automatically by Web3modal\n\t\tconst providerOptions = {\n\t\t\twalletconnect: {\n\t\t\t\tpackage: WalletConnectProvider,\n\t\t\t\toptions: {\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet web3_Modal = new Web3Modal({\n\t\t\tcacheProvider: false, // optional\n\t\t\tproviderOptions, // required\n\t\t\tdisableInjectedProvider: false, // optional. For MetaMask / Brave / Opera.\n\t\t});\n\n\t\tsetWeb3Modal(web3_Modal);\n\n\t\tconsole.log(\"Web3Modal instance is\", web3Modal);\n\t}\n\n\tasync function fetchAccountData() {\n\n\t\t// // Get a Web3 instance for the wallet\n\t\tconst web3 = new Web3(provider);\n\t\tsetWeb3(web3);\n\n\t\t// // Get list of accounts of the connected wallet\n\t\tconst accounts_temp = await web3.eth.getAccounts();\n\n\n\t\t// const tokenInstance_temp = new web3.eth.Contract(\n\t\t// \tBVToken.abi,\n\t\t// \tBVToken.networks[networkId_temp] && BVToken.networks[networkId_temp].address,\n\t\t// );\n\t\t// tokenInstance_temp.options.address = \"0xaBAf0eDE82Db96fcFee3091d11c6c35D60EF5463\";\n\t\t// setTokenInstance(tokenInstance_temp);\n\n\t\t// const publicSaleInstance_temp = new web3.eth.Contract(\n\t\t// \tPublicSale.abi,\n\t\t// \tPublicSale.networks[networkId_temp] && PublicSale.networks[networkId_temp].address,\n\t\t// );\n\t\t// console.log(2)\n\t\t// publicSaleInstance_temp.options.address = \"0x018c09FCe2357C505c3890e15906194e3f656fB4\";\n\t\t// setPublicSaleInstance(publicSaleInstance_temp);\n\t\t// console.log(publicSaleInstance_temp)\n\n\t\t// // MetaMask does not give you all accounts, only the selected account\n\t\tconsole.log(\"Got accounts\", accounts_temp);\n\t\tsetAccount(accounts_temp[0])\n\t\tdispatch(connectUserSuccess(accounts_temp[0]))\n\t\t// // Go through all accounts and get their ETH balance\n\t\t// const rowResolvers = accounts.map(async (address) => {\n\t\t// \tconst balance = await web3.eth.getBalance(address);\n\t\t// \t// ethBalance is a BigNumber instance\n\t\t// \t// https://github.com/indutny/bn.js/\n\t\t// \tconst ethBalance = web3.utils.fromWei(balance, \"ether\");\n\t\t// \tconst humanFriendlyBalance = parseFloat(ethBalance).toFixed(4);\n\t\t// \t// Fill in the templated row and put in the document\n\t\t// \t// const clone = template.content.cloneNode(true);\n\t\t// \t// clone.querySelector(\".address\").textContent = address;\n\t\t// \t// clone.querySelector(\".balance\").textContent = humanFriendlyBalance;\n\t\t// \t// accountContainer.appendChild(clone);\n\t\t// \tconsole.log(address);\n\t\t// \tconsole.log(humanFriendlyBalance);\n\t\t// });\n\n\t\t// // Because rendering account does its own RPC commucation\n\t\t// // with Ethereum node, we do not want to display any results\n\t\t// // until data for all accounts is loaded\n\t\t// await Promise.all(rowResolvers);\n\t\t// // Display fully loaded UI for wallet data\n\t\t// // document.querySelector(\"#prepare\").style.display = \"none\";\n\t\t// // document.querySelector(\"#connected\").style.display = \"block\";\n\t\tsetWalletConnected(true);\n\t}\n\n\tasync function refreshAccountData() {\n\n\t\t// If any current data is displayed when\n\t\t// the user is switching acounts in the wallet\n\t\t// immediate hide this data\n\t\t// document.querySelector(\"#connected\").style.display = \"none\";\n\t\t// document.querySelector(\"#prepare\").style.display = \"block\";\n\t\tsetWalletConnected(false);\n\t\t// Disable button while UI is loading.\n\t\t// fetchAccountData() will take a while as it communicates\n\t\t// with Ethereum node via JSON-RPC and loads chain data\n\t\t// over an API call.\n\t\t// document.querySelector(\"#btn-connect\").setAttribute(\"disabled\", \"disabled\")\n\t\tawait fetchAccountData();\n\t\t// document.querySelector(\"#btn-connect\").removeAttribute(\"disabled\")\n\t}\n\n\n\n\tasync function onConnect() {\n\n\t\tconsole.log(\"Opening a dialog\", web3Modal);\n\t\ttry {\n\t\t\tprovider = await web3Modal.connect();\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Could not get a wallet connection\", e);\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(provider);\n\t\tsetProvider(provider);\n\t\tconsole.log(provider);\n\t\tconsole.log('provider accounts changed')\n\t\t// Subscribe to accounts change\n\t\tprovider.on(\"accountsChanged\", (accounts) => {\n\t\t\tfetchAccountData();\n\t\t});\n\t\tconsole.log('provider chain changed')\n\t\t// Subscribe to chainId change\n\t\tprovider.on(\"chainChanged\", (chainId) => {\n\t\t\tfetchAccountData();\n\t\t});\n\t\tconsole.log('provider network changed')\n\t\t// Subscribe to networkId change\n\t\tprovider.on(\"networkChanged\", (networkId) => {\n\t\t\tfetchAccountData();\n\t\t});\n\t\tawait window.ethereum.request({\n\t\t\tmethod: \"wallet_requestPermissions\",\n\t\t\tparams: [{\n\t\t\t\teth_accounts: {}\n\t\t\t}]\n\t\t});\n\t\tawait refreshAccountData();\n\t}\n\n\tasync function onDisconnect() {\n\t\tconsole.log(\"Killing the wallet connection\", provider);\n\n\t\tsetWalletConnected(false);\n\t\tdispatch(connectUserSuccess(null))\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<section className='container d-flex py-4 justify-content-between  align-items-center'>\n\t\t\t\t<Link to='/'>\n\t\t\t\t\t<img src='/assets/imgs/header/logo.png' alt='' className='w-90px' />\n\t\t\t\t</Link>\n\t\t\t\t<button className='btn d-lg-none d-flex' onClick={() => setActive(true)}>\n\t\t\t\t\t<img src='/assets/imgs/Hamburger.png' className='w-35px' alt='' />\n\t\t\t\t</button>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${active\n\t\t\t\t\t\t\t? 'position-fixed bg-dark top-0 w-100 w-100 start-0 vh-lg-auto vh-100'\n\t\t\t\t\t\t\t: 'd-none d-lg-flex align-items-center '\n\t\t\t\t\t\t} `}\n\t\t\t\t\tstyle={{ zIndex: '999' }}\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={`${active && 'd-flex-imp'} d-none btn m-3 me-2`}\n\t\t\t\t\t\tonClick={() => setActive(false)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img src='/assets/imgs/cancel.png' className='w-35px' alt='' />\n\t\t\t\t\t</button>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`${active && 'show-navbar flex-lg-column mt-lg-8'\n\t\t\t\t\t\t\t} w-lg-auto d-lg-flex d-none flex-lg-row flex-column w-100 mt-8 mt-lg-5 justify-content-between align-items-center`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{NavbarRoutes.map((route) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t!route.hidden ?\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={route.pathForNavabr}\n\t\t\t\t\t\t\t\t\t\tclassName={`header-btn text-warning ${!active && 'me-4'} w-auto mb-5`}\n\t\t\t\t\t\t\t\t\t\tonClick={() => setActive(false)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span className='mx-2'>{route.title}</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='d-lg-flex d-none justify-content-between align-items-center'>\n\t\t\t\t\t<img src='/assets/imgs/coin.png' className='w-50px' />\n\t\t\t\t\t{userId && (\n\t\t\t\t\t\t<div className='dms-block h-40px ms-4 center px-2'>\n\t\t\t\t\t\t\t<div className='dms-btn w-100 me-2 center balance-div'>{blance}</div>\n\t\t\t\t\t\t\t<div className='dms-btn w-100  center'>DMS</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{!userId && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`${userId ? 'w-25' : 'px-5'\n\t\t\t\t\t\t\t\t} header-Connect-btn h-40px ms-4 center bold cursor`}\n\t\t\t\t\t\t\tonClick={onConnect}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tConnect\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{userId && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className='dropdown ms-4'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btn dropdown-toggle fs-13 w-105px h-35px rounded-3 text-white border border-warning center'\n\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\tid='dropdownMenuButton1'\n\t\t\t\t\t\t\t\t\tdata-bs-toggle='dropdown'\n\t\t\t\t\t\t\t\t\taria-expanded='false'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{userId && `${userId.substring(0, 4)}...${userId.slice(-4)}`}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\t\t\tclassName='dropdown-menu  w-sm dropdown-menu-end '\n\t\t\t\t\t\t\t\t\taria-labelledby='dropdownMenuButton1'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/* <li>\n\t\t\t\t\t\t\t\t\t\t<a className='dropdown-item py-5 text-whit cursor py-7px' href='#'>\n\t\t\t\t\t\t\t\t\t\t\tWallet\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a className='dropdown-item py-5 text-whit cursor py-7px' href='#'>\n\t\t\t\t\t\t\t\t\t\t\tTransactions\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<p className='dropdown-item py-5 text-whit cursor py-7px' href='#'>\n\t\t\t\t\t\t\t\t\t\t\tYour NFTs\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<p className='dropdown-item py-5 text-whit cursor py-7px' href='#'>\n\t\t\t\t\t\t\t\t\t\t\tMake a Profile\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<p className='dropdown-item py-5 text-whit cursor py-7px' href='#'\n\t\t\t\t\t\t\t\t\t\t\tonClick={onDisconnect}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tDisconnect\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='mt-2'>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\thref='https://pancakeswap.finance/swap?outputCurrency=0x9bfd1348cf574e3eb2b114cc18374b09ad012c69&inputCurrency=BNB'\n\t\t\t\t\t\t\t\t\tclassName='btn border position-absolute  center w-100px px-1 fs-12   mx-4  text-white cursor'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tBUY DMS\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<div className='announcementBar  mt-3 h-30px py-2 fw-bold fs-17'>\n\t\t\t\t\t<div id='rssBlock '>\n\t\t\t\t\t\t<p className='cnnContents overflow-x-auto'>\n\t\t\t\t\t\t\t<span className='marqueeStyle  '>\n\t\t\t\t\t\t\t\tWelcome to the DearMonsters Universe. An exciting and rewarding journey awaits you!\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</section>\n\t);\n}\n\nexport default Header","import React from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport {Routes} from '../routes'\nimport Header from '../components/common/Header'\n\nconst App = () => {\n\t    return (\n\t\t\t<div className=''>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t{Routes.map((route, idx) => (\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n}\n\nexport default App\n","// create a reducer for login\nimport { CONNECT_USER_START, CONNECT_USER_SUCCESS, CONNECT_USER_ERROR, UPDATE_USER_BALANCE } from '../types';\n\nconst initialState = {\n\tisAuthenticated: false,\n\tloading: false,\n\terror: '',\n\tuserId: '',\n\tbalance: 0,\n};\n\nexport const authReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase CONNECT_USER_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tuserId: '',\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase CONNECT_USER_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\tuserId: action.payload,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase CONNECT_USER_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tuserId: '',\n\t\t\t\terror: action.payload,\n\t\t\t\tloading: false,\n\t\t\t};\n\n\t\tcase UPDATE_USER_BALANCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbalance: action.balance,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { applyMiddleware, createStore } from 'redux';\nimport { combineReducers, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from './reducers/authReducer';\n// import { tradeItems } from \"./reducers/tradeItem\"\n\nconst initialState = {\n\tisAuthenticated: false,\n\tloading: false,\n\t// tradeItems: null,\n\terror: '',\n\tuserId: '',\n\tbalance: 0,\n};\nconst rootReducer = combineReducers({\n\tauth: authReducer,\n});\n\nconst store = createStore(rootReducer, initialState);\n\nexport default store;\n","import React from 'react'\n\nconst PageLoading = () => {\n    return (\n\t\t\t<div className='position-fixed loading-on-load text-warning  vw-100 vh-100 center'>\n\t\t\t\t<div className='spinner-border text-warning' role='status'>\n\t\t\t\t\t<span className='visually-hidden text-warning'>Loading...</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n}\n\nexport default PageLoading\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './views/App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport Loading from './components/common/PageLoading';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './scss/bootstrap.scss';\nReactDOM.render(\n\t<>\n\t\t<Suspense fallback={<Loading />}>\n\t\t\t<Provider store={store}>\n\t\t\t\t<Router>\n\t\t\t\t\t<App />\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t</Suspense>\n\t</>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}