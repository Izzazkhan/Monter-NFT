{"version":3,"sources":["views/pages/InventoryTrading.jsx"],"names":["Inventory","match","React","useState","posts","setPosts","useSelector","state","auth","userId","account","setAccount","dispatch","useDispatch","history","useHistory","usePagination","location","pathname","pageData","currentPage","previousPage","nextPage","totalPages","doPagination","useEffect","setAccountFun","window","web3","a","ethereum","Web3","enable","currentProvider","loaded_web3","alert","eth","getAccounts","accounts","getCave","getData","owner","_posts","axios","get","then","res","console","log","data","tradeItems","length","forEach","item","post","_id","mintedMonster","monster","tokenId","title","img","rating","totalRating","values","Level","EXP","Element","Energy","price","seller","substring","slice","push","catch","e","className","onClick","connectUserAction","map","stepImg","src"],"mappings":"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","file":"static/js/12.6f0f45ce.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport CurrenPageTitle from '../../components/common/CurrenPageTitle';\nimport NavLinks from '../../components/Inventory/NavLinks';\nimport PostCard from '../../components/Inventory/PostCard';\nimport { usePagination } from '../../hooks/usePagination';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { connectUserAction, connectUserSuccess } from '../../store/actions/auth/login';\nimport Web3 from 'web3';\nimport DearMonster from '../../contracts/DearMonster.json';\nimport data from \"../../data/Post.json\";\nimport axios from 'axios'\n\nconst Inventory = ({ match }) => {\n\tconst [posts, setPosts] = React.useState([]);\n\tconst { userId } = useSelector((state) => state.auth);\n\tconst [account, setAccount] = useState();\n\tconst [paths, setPaths] = useState([]);\n\tconst [attributes, setAttributes] = useState([]);\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst { pageData, currentPage, previousPage, nextPage, totalPages, doPagination } =\n\t\tusePagination(posts, 6, history.location.pathname);\n\n\tconst handleConnect = () => {\n\t\tdispatch(connectUserAction());\n\t};\n\n\tuseEffect(() => {\n\t\tsetAccountFun();\n\t}, [window.web3])\n\n\tconst setAccountFun = async () => {\n\t\tif (window.ethereum) {\n\t\t\twindow.web3 = new Web3(window.ethereum)\n\t\t\tawait window.ethereum.enable();\n\t\t} else if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\n\t\t\twindow.loaded_web3 = true\n\t\t} else {\n\t\t\twindow.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n\t\t}\n\n\t\tlet web3 = window.web3\n\t\t// Load account\n\t\tlet accounts = await web3.eth.getAccounts()\n\t\tsetAccount(accounts[0]);\n\t};\n\n\n\t// useEffect(() => {\n\t// \tgetCave();\n\t// }, [window.web3])\n\n\n\tuseEffect(() => {\n\t\tgetCave();\n\t}, [])\n\n\n\tconst getCave = async () => {\n\t\tif (window.ethereum) {\n\t\t\twindow.web3 = new Web3(window.ethereum)\n\t\t\tawait window.ethereum.enable();\n\t\t} else if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\n\t\t\twindow.loaded_web3 = true\n\t\t} else {\n\t\t\twindow.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n\t\t}\n\n\t\tlet web3 = window.web3\n\t\t// Load account\n\t\tlet accounts = await web3.eth.getAccounts()\n\t\tsetAccount(accounts[0]);\n\t\tgetData(accounts[0]);\n\n\t};\n\n\tfunction getData(owner) {\n\t\tlet _posts = []\n\t\taxios.get('http://1a2f-119-155-21-243.ngrok.io/api/tradeItem/inTradeItems/' + owner)\n\t\t\t.then((res) => {\n\n\t\t\t\tconsole.log('res.data ================')\n\t\t\t\tconsole.log(res.data.tradeItems)\n\n\t\t\t\tif (res.data.tradeItems && res.data.tradeItems.length > 0) {\n\t\t\t\t\tres.data.tradeItems.forEach(item => {\n\t\t\t\t\t\tlet post = {}\n\t\t\t\t\t\tpost['onSale'] = true\n\t\t\t\t\t\tpost['tradeId'] = item._id\n\t\t\t\t\t\tpost['mintedId'] = item.mintedMonster._id\n\t\t\t\t\t\tpost['monsterId'] = item.monster._id\n\t\t\t\t\t\tpost['id'] = item.tokenId\n\t\t\t\t\t\tpost['title'] = item.monster.title\n\t\t\t\t\t\tpost['img'] = item.monster.img\n\t\t\t\t\t\tpost['rating'] = item.mintedMonster.rating\n\t\t\t\t\t\tpost['totalRating'] = item.monster.totalRating\n\t\t\t\t\t\tpost['values'] = {}\n\t\t\t\t\t\tpost.values['Level'] = item.mintedMonster.values.Level\n\t\t\t\t\t\tpost.values['EXP'] = item.mintedMonster.values.EXP\n\t\t\t\t\t\tpost.values['Element'] = item.mintedMonster.values.Element\n\t\t\t\t\t\tpost.values['Energy'] = item.mintedMonster.values.Energy\n\t\t\t\t\t\tpost['price'] = item.price\n\t\t\t\t\t\tpost.values['OwnerID'] = `${item.seller.substring(0, 4)}...${item.seller.slice(-4)}`\n\t\t\t\t\t\t_posts.push(post);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tsetPosts(_posts)\n\t\t\t\tdoPagination(_posts);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(\"Error ----------------\")\n\t\t\t\tconsole.log(e)\n\t\t\t})\n\t}\n\n\t// useEffect(() => {\n\t// \tif (posts.length > 0)\n\t// \t  return\n\t// \tgetData();\n\t// }, [attributes])\n\n\n\t// useEffect(() => {\n\t// \tgetData();\n\t// }, [])\n\n\treturn (\n\t\t<div>\n\t\t\t<CurrenPageTitle title='Inventory'></CurrenPageTitle>\n\t\t\t<NavLinks match={match} />\n\t\t\t{posts.length > 0 ? '' :\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<div className='center'>\n\t\t\t\t\t\t{/* {userId ? (account */}\n\t\t\t\t\t\t{account ? (\n\t\t\t\t\t\t\t<p className='text-white  mt-9 fs-23 bg-dark bg-opacity-50 p-3 rounded-3 w-auto'>\n\t\t\t\t\t\t\t\tYou Don't have any item in trading\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p className='text-white  mt-9 fs-23 bg-dark bg-opacity-50 p-3 rounded-3 w-auto'>\n\t\t\t\t\t\t\t\t\tPlease connect to see Inventory\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tonClick={handleConnect}\n\t\t\t\t\t\t\t\t\tclassName={` header-Connect-btn h-40px w-sm mx-auto  mt-5 center bold cursor`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tConnect\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<div className='container mt-10 px-md-auto px-8'>\n\t\t\t\t<div className='row row-cols-lg-3 row-cols-md-2 gx-10'>\n\t\t\t\t\t{pageData.map((post) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PostCard getData={getData} account={account} post={post} stepImg='/assets/imgs/droganBord.png' className='mb-9' />\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t{pageData.length == 0 ? (\n\t\t\t\t\t''\n\t\t\t\t) : (\n\t\t\t\t\t<footer className='center pb-8 pt-4'>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc='/assets/imgs/ArrowLeft.png '\n\t\t\t\t\t\t\tclassName='cursor'\n\t\t\t\t\t\t\tonClick={previousPage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p className='text-white fs-22 mx-5'>\n\t\t\t\t\t\t\t{currentPage}/{totalPages}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img src='/assets/imgs/ArrowRight.png' className='cursor' onClick={nextPage} />\n\t\t\t\t\t</footer>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Inventory;\n"],"sourceRoot":""}